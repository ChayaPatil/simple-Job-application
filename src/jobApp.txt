<Container>
      <div className="arrow-up"></div>
        <Card>
          <Card.Body>
          <Form onSubmit={this.handleSubmit}>
            <Form.Group>
              <Form.Row>
                <Col md="3"><Form.Label>UserName</Form.Label></Col>
                <Col md="8">
                  <Form.Control 
                  type="text" 
                  name="name"
                  value={this.state.name}
                  onChange={this.handleChange} />
                </Col>
              </Form.Row>
              <br/>
              <Form.Row>
                <Col md="3"><Form.Label>Email Address</Form.Label></Col>
                <Col md="8">
                  <Form.Control 
                  type="email" 
                  name='email'
                  value={this.state.email}
                  onChange={this.handleChange} />
                </Col>
              </Form.Row>
              <br/>
              <Form.Row>
                <Col md="3"><Form.Label>Contact Number</Form.Label></Col>
                <Col md="8">
                  <Form.Control 
                  type="text" 
                  name="phone"
                  value={this.state.phone}
                  onChange={this.handleChange} />
                </Col>
              </Form.Row>
              <br/>
              <Form.Row>
                <Col md="3"><Form.Label>Applying for Job</Form.Label></Col>
                <Col md="8">
                  <Form.Control as="select" value={this.state.jobTitle} name="jobTitle" custom onChange={this.handleDropdown}>
                  <option value="select">---select---</option>
                  <option value="Full Stack developer">Full Stack developer</option>
                  <option value="Node.js developer">Node.js developer</option>
                  <option value="Front end developer">Front end developer</option>
                  <option value="Mean Stack developer">Mean Stack developer</option>
                  </Form.Control>
                </Col>
                </Form.Row>
              <br/>
              <Form.Row>
                <Col md="3"><Form.Label>Experience</Form.Label></Col>
                <Col md="8">
                  <Form.Control 
                  type="text"
                  name="experience" 
                  value={this.state.experience}
                  onChange={this.handleChange} />
                </Col>
              </Form.Row>
              <br/>
              <Form.Row>
                <Col md="3"><Form.Label>Technical skills</Form.Label></Col>
                <Col md="8">
                  <Form.Control 
                  type="text" 
                  name="skills"
                  value={this.state.skills}
                  onChange={this.handleChange} />
                </Col>
              </Form.Row>
              <br/>
              <input type="submit" value="submit" />
              </Form.Group></Form>
          </Card.Body>
        </Card>
      </Container>




      import React from 'react'
import axios from 'axios'
import { Table, Tabs, Tab } from 'react-bootstrap'
import './Admin.css'
import moment from 'moment'

class Admin extends React.Component{
  constructor(){
    super()
    this.state={
      users:[],
      count: 10,
      open:false
    }
  }

  componentDidMount(){
    axios.get(`http://dct-application-form.herokuapp.com/users/application-forms`)
    .then((response) => {
      const users = response.data
      this.setState({ users })
    })
  }

  handleOpen = (id) => {
    axios.get(`http://dct-application-form.herokuapp.com/users/application-forms/${id}`)
    .then((response) => {
      console.log(response.data)
    })
  }

  render(){
    let frontEnd = this.state.users.filter(function(ele){
      return ele.jobTitle === 'MEAN Stack Developer'
    })
    let nodeJs = this.state.users.filter(function(ele){
      return ele.jobTitle === 'Node.js Developer'
    })
    let meanStack = this.state.users.filter(function(ele){
      return ele.jobTitle === 'MEAN Stack Developer'
    })
    let fullStack = this.state.users.filter(function(ele){
      return ele.jobTitle === 'FULL Stack Developer'
    })  

    return(
      <div className="container">
      <h3>Users--{frontEnd.length}</h3>
      <Tabs defaultActiveKey="frontEnd" transition={false} id="noanim-tab-example">
        <Tab eventKey="frontEnd" title="Front-End Developer">
        <br/><br/>
        <h3>Front-End Developers - {frontEnd.length}</h3>
        <span>List of candidates applied for Front-end developer job</span>
        <Table>
        <thead>
          <tr>
            <td>Name</td>
            <td>Technicall Skills</td>
            <td>Experience</td>
            <td>Applited Date</td>
            <td>View Details</td>
            <td>Update Application Status</td>
          </tr>
        </thead>
        <tbody>
        {
          frontEnd.map(function(ele, i){
            return (
              <tr>
                <td>{ele.name}</td>
                <td>{ele.skills}</td>
                <td>{ele.experience}</td>
                <td>{moment(ele.createdAt).format("D/M/YYYY")}</td>
                <td><button onClick={() => {this.handleOpen(ele._id)}}>view details</button></td>
                <td><button className="btn btn-success">shortlist</button>&nbsp;&nbsp;<button className="btn btn-danger">Reject</button></td>
              </tr>
            )
          })
        }
        </tbody>
      </Table>
        </Tab>
        <Tab eventKey="nodeJs" title="Node.js Developer">
        <br/><br/>
        <h3>Node.js Developers - {nodeJs.length}</h3>
        <span>List of candidates applied for Node.js developer job</span>
        <Table>
        <thead>
          <tr>
            <td>Name</td>
            <td>Technicall Skills</td>
            <td>Experience</td>
            <td>Applited Date</td>
            <td>View Details</td>
            <td>Update Application Status</td>
          </tr>
        </thead>
        <tbody>
        {
          nodeJs.map(function(ele, i){
            return (
              <tr>
                <td>{ele.name}</td>
                <td>{ele.skills}</td>
                <td>{ele.experience}</td>
                <td>{moment(ele.createdAt).format("D/M/YYYY")}</td>
                <td><button className="btn btn-primary">view details</button></td>
                <td><button className="btn btn-success">shortlist</button>&nbsp;&nbsp;<button className="btn btn-danger">Reject</button></td>
              </tr>
            )
          })
        }
        </tbody>
      </Table>
        </Tab>
        <Tab eventKey="meanStack" title="MEAN Stack Developer">
        <br/><br/>
        <h3>MEAN Stack Developers - {meanStack.length}</h3>
        <span>List of candidates applied for MEAN Stack developer job</span>
        <Table>
        <thead>
          <tr>
            <td>Name</td>
            <td>Technicall Skills</td>
            <td>Experience</td>
            <td>Applited Date</td>
            <td>View Details</td>
            <td>Update Application Status</td>
          </tr>
        </thead>
        <tbody>
        {
          meanStack.map(function(ele, i){
            return (
              <tr>
                <td>{ele.name}</td>
                <td>{ele.skills}</td>
                <td>{ele.experience}</td>
                <td>{moment(ele.createdAt).format("D/M/YYYY")}</td>
                <td><button className="btn btn-primary">view details</button></td>
                <td><button className="btn btn-success">shortlist</button>&nbsp;&nbsp;<button className="btn btn-danger">Reject</button></td>
              </tr>
            )
          })
        }
        </tbody>
      </Table>
        </Tab>
        <Tab eventKey="fullStack" title="FULL Stack Developer">
        <br/><br/>
        <h3>FULL Stack Developers - {fullStack.length}</h3>
        <span>List of candidates applied for FULL Stack developer job</span>
        <Table>
        <thead>
          <tr>
            <td>Name</td>
            <td>Technicall Skills</td>
            <td>Experience</td>
            <td>Applited Date</td>
            <td>View Details</td>
            <td>Update Application Status</td>
          </tr>
        </thead>
        <tbody>
        {
          fullStack.map(function(ele, i){
            return (
              <tr>
                <td>{ele.name}</td>
                <td>{ele.skills}</td>
                <td>{ele.experience}</td>
                <td>{moment(ele.createdAt).format("D/M/YYYY")}</td>
                <td><button className="btn btn-primary">view details</button></td>
                <td><button className="btn btn-success">shortlist</button>&nbsp;&nbsp;<button className="btn btn-danger">Reject</button></td>
              </tr>
            )
          })
        }
        </tbody>
      </Table>
        </Tab>
      </Tabs>
    </div>
    )
  }
}
export default Admin